package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.v2019_2.*
import jetbrains.buildServer.configs.kotlin.v2019_2.buildSteps.DockerCommandStep
import jetbrains.buildServer.configs.kotlin.v2019_2.buildSteps.dockerCommand
import jetbrains.buildServer.configs.kotlin.v2019_2.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the buildType with id = 'build_3'
accordingly, and delete the patch script.
*/
changeBuildType(RelativeId("build_3")) {
    expectSteps {
        dockerCommand {
            name = "build teamcity-server:18.04,linux"
            commandType = build {
                source = file {
                    path = "linux/Server/Ubuntu/18.04"
                }
                namesAndTags = """
                    teamcity-server:18.04
                    teamcity-server:linux
                """.trimIndent()
                commandArgs = "--pull"
            }
            param("dockerImage.platform", "windows")
        }
        dockerCommand {
            name = "build teamcity-minimal-agent:18.04,linux"
            commandType = build {
                source = file {
                    path = "linux/MinimalAgent/Ubuntu/18.04"
                }
                namesAndTags = """
                    teamcity-minimal-agent:18.04
                    teamcity-minimal-agent:linux
                """.trimIndent()
                commandArgs = "--pull"
            }
            param("dockerImage.platform", "windows")
        }
        dockerCommand {
            name = "build teamcity-agent:18.04,linux"
            commandType = build {
                source = file {
                    path = "linux/Agent/Ubuntu/18.04"
                }
                namesAndTags = """
                    teamcity-agent:18.04
                    teamcity-agent:linux
                """.trimIndent()
                commandArgs = "--pull"
            }
            param("dockerImage.platform", "windows")
        }
    }
    steps {
        update<DockerCommandStep>(0) {
            param("dockerImage.platform", "linux")
        }
    }
}
